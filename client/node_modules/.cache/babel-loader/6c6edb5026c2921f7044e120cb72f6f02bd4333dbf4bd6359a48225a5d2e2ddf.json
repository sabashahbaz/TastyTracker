{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FoodItem({\n  item,\n  addToFoodList,\n  currentUser,\n  setTotalCaloriesIAte,\n  currentFoodResponse\n}) {\n  _s();\n  const navigate = useNavigate();\n  // console.log(currentFoodResponse)\n\n  async function handleClick(e) {\n    // await addToFoodList(item)\n    // if (currentFoodResponse) {\n    //     navigate('/food_log')\n    //     console.log(currentFoodResponse)\n    // }\n    // console.log(\"hey\")\n    // // console.log(currentUser.user_id)\n    // fetch(/update_calories_eaten/, {\n    //     method: 'PATCH',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         'Accepts': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //         \"calories\": item.calories,\n    //     })\n    // })\n    //     .then(response => response.json())\n    //     .then(data => setTotalCaloriesIAte(data))\n    postDataAndPatchData(data);\n  }\n  async function postDataAndPatchData(dataToPost, dataToPatch) {\n    try {\n      const postResponse = await fetch('/add_to_food_list', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"name\": foodToAdd.name,\n          \"description\": foodToAdd.description,\n          \"calories\": foodToAdd.calories,\n          \"meal_type\": selectedMeal,\n          \"user_id\": currentUser.user_id\n        })\n      });\n      const patchResponse = await fetch(`/update_calories_eaten/${user_id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"calories\": item.calories\n        })\n      });\n      if (postResponse.ok && patchResponse.ok) {\n        const postData = await postResponse.json();\n        const patchData = await patchResponse.json();\n        console.log('POST Response:', postData);\n        console.log('PATCH Response:', patchData);\n      } else {\n        console.error(\"Request failed\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-item\",\n    onClick: e => handleClick(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calories: \", item.calories, \" calories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(FoodItem, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = FoodItem;\nexport default FoodItem;\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }\nvar _c;\n$RefreshReg$(_c, \"FoodItem\");","map":{"version":3,"names":["React","Link","useNavigate","jsxDEV","_jsxDEV","FoodItem","item","addToFoodList","currentUser","setTotalCaloriesIAte","currentFoodResponse","_s","navigate","handleClick","e","postDataAndPatchData","data","dataToPost","dataToPatch","postResponse","fetch","method","headers","body","JSON","stringify","foodToAdd","name","description","calories","selectedMeal","user_id","patchResponse","ok","postData","json","patchData","console","log","error","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js"],"sourcesContent":["import React from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\n\nfunction FoodItem ({item, addToFoodList, currentUser, setTotalCaloriesIAte, currentFoodResponse}) {\n    const navigate = useNavigate()\n    // console.log(currentFoodResponse)\n\n    async function handleClick(e) {\n        // await addToFoodList(item)\n        // if (currentFoodResponse) {\n        //     navigate('/food_log')\n        //     console.log(currentFoodResponse)\n        // }\n        // console.log(\"hey\")\n        // // console.log(currentUser.user_id)\n        // fetch(/update_calories_eaten/, {\n        //     method: 'PATCH',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         'Accepts': 'application/json'\n        //     },\n        //     body: JSON.stringify({\n        //         \"calories\": item.calories,\n        //     })\n        // })\n        //     .then(response => response.json())\n        //     .then(data => setTotalCaloriesIAte(data))\n        postDataAndPatchData(data)\n    }\n\n    async function postDataAndPatchData(dataToPost, dataToPatch) {\n        try {\n            const postResponse = await fetch('/add_to_food_list', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"name\": foodToAdd.name, \n                    \"description\": foodToAdd.description,\n                    \"calories\": foodToAdd.calories,\n                    \"meal_type\": selectedMeal,\n                    \"user_id\": currentUser.user_id,\n                }),\n            });\n    \n            const patchResponse = await fetch(`/update_calories_eaten/${user_id}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"calories\": item.calories,\n                }),\n            });\n    \n            if (postResponse.ok && patchResponse.ok) {\n                const postData = await postResponse.json();\n                const patchData = await patchResponse.json();\n    \n                console.log('POST Response:', postData);\n                console.log('PATCH Response:', patchData);\n            } else {\n                console.error(\"Request failed\");\n            }\n        } catch (error) {\n            console.error(\"An error occurred:\", error);\n        }\n    }\n    \n\n    return (\n        <div className=\"food-item\" onClick={(e) => handleClick(e)} >\n        <h1>{item.name}</h1>\n        <p>{item.description}</p>\n        <p>Calories: {item.calories} calories</p>\n        </div> \n    )\n}\n\nexport default FoodItem;\n\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}