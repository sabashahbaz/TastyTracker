{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/TastyTracker/client/src/Components/ProgressBar.js\";\nimport React, { useState } from 'react';\nimport CSS from \"../CSS/ProgressBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressBar({\n  caloriesIAte,\n  currentTdee\n}) {\n  // Calculate the percentage of caloriesIAte relative to currentTdee\n  const percentage = caloriesIAte / currentTdee * 100;\n\n  // Determine the color for the fill portion\n  const getFillColor = () => {\n    if (caloriesIAte < currentTdee) {\n      return \"#50C878\"; // Green if caloriesIAte is less than currentTdee\n    } else {\n      return \"#50C878\"; // Green if caloriesIAte is greater than or equal to currentTdee\n    }\n  };\n\n  // Determine the color for the portion above currentTdee\n  const getAboveTdeeColor = () => {\n    if (caloriesIAte >= currentTdee) {\n      return \"#FF0000\"; // Red if caloriesIAte is greater than or equal to currentTdee\n    } else {\n      return \"transparent\"; // Transparent if caloriesIAte is less than currentTdee\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fill\",\n        style: {\n          width: `${Math.min(percentage, 100)}%`,\n          // Cap at 100%\n          backgroundColor: getFillColor()\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fill above-tdee\",\n        style: {\n          width: `${Math.max(percentage - 100, 0)}%`,\n          // Start from 0% when below currentTdee\n          backgroundColor: getAboveTdeeColor()\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","CSS","jsxDEV","_jsxDEV","ProgressBar","caloriesIAte","currentTdee","percentage","getFillColor","getAboveTdeeColor","className","children","style","width","Math","min","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","max","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/TastyTracker/client/src/Components/ProgressBar.js"],"sourcesContent":["import React, {useState} from 'react'\nimport CSS from \"../CSS/ProgressBar.css\"\n\nfunction ProgressBar({ caloriesIAte, currentTdee }) {\n  // Calculate the percentage of caloriesIAte relative to currentTdee\n  const percentage = (caloriesIAte / currentTdee) * 100;\n\n  // Determine the color for the fill portion\n  const getFillColor = () => {\n    if (caloriesIAte < currentTdee) {\n      return \"#50C878\"; // Green if caloriesIAte is less than currentTdee\n    } else {\n      return \"#50C878\"; // Green if caloriesIAte is greater than or equal to currentTdee\n    }\n  };\n\n  // Determine the color for the portion above currentTdee\n  const getAboveTdeeColor = () => {\n    if (caloriesIAte >= currentTdee) {\n      return \"#FF0000\"; // Red if caloriesIAte is greater than or equal to currentTdee\n    } else {\n      return \"transparent\"; // Transparent if caloriesIAte is less than currentTdee\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"bar\">\n        {/* Fill portion below or equal to currentTdee */}\n        <div\n          className=\"fill\"\n          style={{\n            width: `${Math.min(percentage, 100)}%`, // Cap at 100%\n            backgroundColor: getFillColor(),\n          }}\n        ></div>\n        {/* Portion above currentTdee */}\n        <div\n          className=\"fill above-tdee\"\n          style={{\n            width: `${Math.max(percentage - 100, 0)}%`, // Start from 0% when below currentTdee\n            backgroundColor: getAboveTdeeColor(),\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressBar;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,GAAG,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC,YAAY;EAAEC;AAAY,CAAC,EAAE;EAClD;EACA,MAAMC,UAAU,GAAIF,YAAY,GAAGC,WAAW,GAAI,GAAG;;EAErD;EACA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIH,YAAY,GAAGC,WAAW,EAAE;MAC9B,OAAO,SAAS,CAAC,CAAC;IACpB,CAAC,MAAM;MACL,OAAO,SAAS,CAAC,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIJ,YAAY,IAAIC,WAAW,EAAE;MAC/B,OAAO,SAAS,CAAC,CAAC;IACpB,CAAC,MAAM;MACL,OAAO,aAAa,CAAC,CAAC;IACxB;EACF,CAAC;;EAED,oBACEH,OAAA;IAAKO,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBR,OAAA;MAAKO,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAElBR,OAAA;QACEO,SAAS,EAAC,MAAM;QAChBE,KAAK,EAAE;UACLC,KAAK,EAAG,GAAEC,IAAI,CAACC,GAAG,CAACR,UAAU,EAAE,GAAG,CAAE,GAAE;UAAE;UACxCS,eAAe,EAAER,YAAY,CAAC;QAChC;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEPjB,OAAA;QACEO,SAAS,EAAC,iBAAiB;QAC3BE,KAAK,EAAE;UACLC,KAAK,EAAG,GAAEC,IAAI,CAACO,GAAG,CAACd,UAAU,GAAG,GAAG,EAAE,CAAC,CAAE,GAAE;UAAE;UAC5CS,eAAe,EAAEP,iBAAiB,CAAC;QACrC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACE,EAAA,GA5CQlB,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}