{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FoodItem({\n  item,\n  selectedMeal,\n  setFoodItem,\n  currentUser,\n  foodItem,\n  setTotalCaloriesIAte\n}) {\n  _s();\n  const navigate = useNavigate();\n\n  // const [foodItem, setFoodItem] = useState([])\n\n  // console.log(\"hey from food item page\", foodItem)\n\n  function postDataAndPatchData() {\n    // const newObj = {\n    //     \"name\": item.name, \n    //     \"description\": item.description,\n    //     \"calories\": item.calories,\n    //     \"meal_type\": selectedMeal,\n    //     \"user_id\": currentUser.user_id,\n    // }\n    // console.log(newObj)\n    fetch('/add_to_food_list', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      },\n      body: JSON.stringify({\n        \"name\": item.name,\n        \"description\": item.description,\n        \"calories\": item.calories,\n        \"meal_type\": selectedMeal,\n        \"user_id\": currentUser.user_id\n      })\n    }).then(response => response.json()).then(data => setFoodItem([...foodItem, data]));\n    fetch(`/update_calories_eaten/${currentUser.user_id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"calories\": item.calories\n      })\n    }).then(response => response.json()).then(data => setTotalCaloriesIAte(data.calories));\n  }\n  ;\n\n  // console.log(foodItem)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-item\",\n    onClick: e => postDataAndPatchData(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calories: \", item.calories, \" calories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(FoodItem, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = FoodItem;\nexport default FoodItem;\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }\n\n// console.log(currentFoodResponse)\n\n// async function handleClick(e) {\n//     await addToFoodList(item)\n//     if (currentFoodResponse) {\n//         navigate('/food_log')\n//         console.log(currentFoodResponse)\n//     }\n//     console.log(\"hey\")\n//     // console.log(currentUser.user_id)\n//     fetch(/update_calories_eaten/, {\n//         method: 'PATCH',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             'Accepts': 'application/json'\n//         },\n//         body: JSON.stringify({\n//             \"calories\": item.calories,\n//         })\n//     })\n//         .then(response => response.json())\n//         .then(data => setTotalCaloriesIAte(data))\n//     postDataAndPatchData(item)\n\n// async function postDataAndPatchData(foodToAdd, caloriesToPatch) {\n//     try {\n//         const postResponse = await fetch('/add_to_food_list', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 \"name\": foodToAdd.name, \n//                 \"description\": foodToAdd.description,\n//                 \"calories\": foodToAdd.calories,\n//                 \"meal_type\": selectedMeal,\n//                 \"user_id\": currentUser.user_id,\n//             }),\n//         });\n\n//         const patchResponse = await fetch(`/update_calories_eaten`, {\n//             method: 'PATCH',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 \"calories\": caloriesToPatch.calories,\n//             }),\n//         });\n\n//         if (postResponse.ok && patchResponse.ok) {\n//             const postData = await postResponse.json();\n//             const patchData = await patchResponse.json();\n\n//             console.log('POST Response:', postData);\n//             console.log('PATCH Response:', patchData);\n//         } else {\n//             console.error(\"Request failed\");\n//         }\n//     } catch (error) {\n//         console.error(\"An error occurred:\", error);\n//     }\n// }\nvar _c;\n$RefreshReg$(_c, \"FoodItem\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","FoodItem","item","selectedMeal","setFoodItem","currentUser","foodItem","setTotalCaloriesIAte","_s","navigate","postDataAndPatchData","fetch","method","headers","body","JSON","stringify","name","description","calories","user_id","then","response","json","data","className","onClick","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\n\nfunction FoodItem ({item, selectedMeal, setFoodItem, currentUser, foodItem, setTotalCaloriesIAte}) {\n    const navigate = useNavigate()\n\n    // const [foodItem, setFoodItem] = useState([])\n\n    // console.log(\"hey from food item page\", foodItem)\n\n    function postDataAndPatchData() {\n        // const newObj = {\n        //     \"name\": item.name, \n        //     \"description\": item.description,\n        //     \"calories\": item.calories,\n        //     \"meal_type\": selectedMeal,\n        //     \"user_id\": currentUser.user_id,\n        // }\n        // console.log(newObj)\n        fetch('/add_to_food_list', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n            },\n            body: JSON.stringify({\n                \"name\": item.name, \n                \"description\": item.description,\n                \"calories\": item.calories,\n                \"meal_type\": selectedMeal,\n                \"user_id\": currentUser.user_id,\n            })\n        })\n            .then(response => response.json())\n            .then(data =>setFoodItem([...foodItem, data]))\n\n        fetch(`/update_calories_eaten/${currentUser.user_id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"calories\": item.calories,\n            })\n        })\n            .then(response => response.json())\n            .then(data => setTotalCaloriesIAte(data.calories) )\n};\n\n// console.log(foodItem)\n\n    return (\n        <div className=\"food-item\" onClick={(e) => postDataAndPatchData(e)} >\n        <h1>{item.name}</h1>\n        <p>{item.description}</p>\n        <p>Calories: {item.calories} calories</p>\n        </div> \n    )\n    }\n\nexport default FoodItem;\n\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }\n\n\n\n\n    // console.log(currentFoodResponse)\n\n    // async function handleClick(e) {\n    //     await addToFoodList(item)\n    //     if (currentFoodResponse) {\n    //         navigate('/food_log')\n    //         console.log(currentFoodResponse)\n    //     }\n    //     console.log(\"hey\")\n    //     // console.log(currentUser.user_id)\n    //     fetch(/update_calories_eaten/, {\n    //         method: 'PATCH',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             'Accepts': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             \"calories\": item.calories,\n    //         })\n    //     })\n    //         .then(response => response.json())\n    //         .then(data => setTotalCaloriesIAte(data))\n    //     postDataAndPatchData(item)\n    \n\n    // async function postDataAndPatchData(foodToAdd, caloriesToPatch) {\n    //     try {\n    //         const postResponse = await fetch('/add_to_food_list', {\n    //             method: 'POST',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify({\n    //                 \"name\": foodToAdd.name, \n    //                 \"description\": foodToAdd.description,\n    //                 \"calories\": foodToAdd.calories,\n    //                 \"meal_type\": selectedMeal,\n    //                 \"user_id\": currentUser.user_id,\n    //             }),\n    //         });\n    \n    //         const patchResponse = await fetch(`/update_calories_eaten`, {\n    //             method: 'PATCH',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify({\n    //                 \"calories\": caloriesToPatch.calories,\n    //             }),\n    //         });\n    \n    //         if (postResponse.ok && patchResponse.ok) {\n    //             const postData = await postResponse.json();\n    //             const patchData = await patchResponse.json();\n    \n    //             console.log('POST Response:', postData);\n    //             console.log('PATCH Response:', patchData);\n    //         } else {\n    //             console.error(\"Request failed\");\n    //         }\n    //     } catch (error) {\n    //         console.error(\"An error occurred:\", error);\n    //     }\n    // }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}