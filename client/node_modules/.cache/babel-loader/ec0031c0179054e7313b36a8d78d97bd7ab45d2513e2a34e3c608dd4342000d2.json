{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/TastyTracker/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport CreateAccountPage from './Components/CreateAccountPage.js';\nimport FoodDashBoardPage from './Components/FoodDashboardPage';\nimport Error from './Error';\nimport SearchResultsPage from './Components/SearchResultsPage';\nimport NavBar from './Components/NavBar';\nimport LoginPage from \"./Components/LoginPage\";\nimport WelcomePage from './Components/WelcomePage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [searchedItems, setSearchedItems] = useState([]); //the food items that are returned from the search \n  const [foodItem, setFoodItem] = useState([]); //the food item that is selected by user \n  const [selectedMeal, setSelectedMeal] = useState(\"\");\n  const [caloriesIAte, setCaloriesIAte] = useState(\"\");\n  const [totalCaloriesRemaining, setTotalCaloriesRemaining] = useState(\"\");\n  const [currentTdee, setCurrentTdee] = useState(\"\");\n  useEffect(() => {\n    fetch('/check_session').then(response => {\n      if (response.ok) {\n        response.json().then(user => setCurrentUser(user));\n      }\n    });\n  }, []);\n  function addToFoodList(foodToAdd) {\n    // add the selected food list to its designated area\n    console.log(\"heyyyyy\");\n    fetch('/add_to_food_list', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      },\n      body: JSON.stringify({\n        \"name\": foodToAdd.name,\n        \"description\": foodToAdd.description,\n        \"calories\": foodToAdd.calories,\n        \"meal_type\": selectedMeal,\n        \"user_id\": currentUser.user_id\n      })\n    });\n    console.log(\"did the post work??\").then(response => response.json()).then(data => {\n      fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/JSON\"\n        },\n        body: JSON.stringify({\n          \"total_daily_calories_eaten\": data.calories\n        })\n      });\n      console.log(\"did we pass the patch work??\").then(response => {\n        if (response.ok) {\n          console.log('Calories consumed updated successfully.');\n        } else {\n          console.error('Failed to update calories consumed.');\n        }\n      }).catch(error => {\n        console.error('An error occurred while updating calories consumed:', error);\n      });\n\n      // Step 3: Update the state with the new food item\n      setFoodItem([...foodItem, data]);\n    }).catch(error => {\n      console.log(\"Front-end is broken\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      caloriesIAte: caloriesIAte,\n      totalCaloriesRemaining: totalCaloriesRemaining,\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser,\n      children: \"Navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(WelcomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/food_log\",\n        element: /*#__PURE__*/_jsxDEV(FoodDashBoardPage, {\n          setCurrentTdee: setCurrentTdee,\n          caloriesIAte: caloriesIAte,\n          currentTdee: currentTdee,\n          currentUser: currentUser,\n          setCurrentUser: setCurrentUser,\n          searchedItems: searchedItems,\n          foodItem: foodItem,\n          setSearchedItems: setSearchedItems,\n          setSelectedMeal: setSelectedMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"search_food\",\n        element: /*#__PURE__*/_jsxDEV(SearchResultsPage, {\n          setCurrentUser: setCurrentUser,\n          setSearchedItems: setSearchedItems,\n          searchedItems: searchedItems,\n          addToFoodList: addToFoodList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"tdee_calculator\",\n        element: /*#__PURE__*/_jsxDEV(CreateAccountPage\n        // create_account_tdee ={createAccountAndTdee}\n        , {\n          setCurrentUser: setCurrentUser\n          // calculate_tdee={calculate_tdee} \n          ,\n          setCurrentTdee: setCurrentTdee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          setCurrentTdee: setCurrentTdee,\n          currentUser: currentUser,\n          setCurrentUser: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"a2iWZf+jpvgdseY1FqOzS2J7UCw=\");\n_c = App;\nexport default App;\n\n// function addToFoodList (foodToAdd) {   // add the selected food list to its designated area\n//   console.log(\"currentUser\",currentUser.user_id)\n//   fetch('/add_to_food_list', {\n//       method: 'POST',\n//       headers: {\n//           \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//                       \"name\": foodToAdd.name, \n//                       \"description\": foodToAdd.description,\n//                       \"calories\": foodToAdd.calories,\n//                       \"meal_type\": selectedMeal,\n//                       \"user_id\": currentUser.user_id,\n//       })\n//     })\n//       .then(response => response.json())\n//       .then(data => setFoodItem([...foodItem, data]))\n//       .catch(error => {console.log(\"front-end is broken\", error)})  \n//   return foodItem \n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BrowserRouter","Routes","Route","CreateAccountPage","FoodDashBoardPage","Error","SearchResultsPage","NavBar","LoginPage","WelcomePage","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","searchedItems","setSearchedItems","foodItem","setFoodItem","selectedMeal","setSelectedMeal","caloriesIAte","setCaloriesIAte","totalCaloriesRemaining","setTotalCaloriesRemaining","currentTdee","setCurrentTdee","fetch","then","response","ok","json","user","addToFoodList","foodToAdd","console","log","method","headers","body","JSON","stringify","name","description","calories","user_id","data","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/TastyTracker/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect} from \"react\";\nimport {useNavigate} from 'react-router-dom';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport CreateAccountPage from './Components/CreateAccountPage.js';\nimport FoodDashBoardPage from './Components/FoodDashboardPage'\nimport Error from './Error';\nimport SearchResultsPage from './Components/SearchResultsPage'\nimport NavBar from './Components/NavBar'\nimport LoginPage from \"./Components/LoginPage\"\nimport WelcomePage from './Components/WelcomePage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [searchedItems, setSearchedItems] = useState([]) //the food items that are returned from the search \n  const [foodItem, setFoodItem] = useState([]) //the food item that is selected by user \n  const [selectedMeal, setSelectedMeal] = useState(\"\")\n  const [caloriesIAte, setCaloriesIAte] = useState(\"\")\n  const [totalCaloriesRemaining, setTotalCaloriesRemaining] = useState(\"\")\n  const [currentTdee, setCurrentTdee] = useState(\"\")\n\n  useEffect(() => {\n    fetch('/check_session')\n    .then(response => {\n      if(response.ok) {\n        response.json()\n        .then(user => setCurrentUser(user))\n      }\n    })\n  }, [])\n\n  function addToFoodList (foodToAdd) {   // add the selected food list to its designated area\n    console.log(\"heyyyyy\")\n    fetch('/add_to_food_list', {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/JSON\",\n        },\n        body: JSON.stringify({\n                        \"name\": foodToAdd.name, \n                        \"description\": foodToAdd.description,\n                        \"calories\": foodToAdd.calories,\n                        \"meal_type\": selectedMeal,\n                        \"user_id\": currentUser.user_id,\n        })\n      })\n        console.log(\"did the post work??\")\n        .then(response => response.json())\n        .then(data => {\n          fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n            method: 'PATCH',\n            headers: {\n              \"Content-Type\": \"application/JSON\",\n            },\n            body: JSON.stringify({\n              \"total_daily_calories_eaten\": data.calories\n            })\n          })\n          console.log(\"did we pass the patch work??\")\n          .then(response => {\n            if (response.ok) {\n              console.log('Calories consumed updated successfully.');\n            } else {\n              console.error('Failed to update calories consumed.');\n            }\n          })\n          .catch(error => {\n            console.error('An error occurred while updating calories consumed:', error);\n          });\n      \n          // Step 3: Update the state with the new food item\n          setFoodItem([...foodItem, data]);\n        })\n        .catch(error => {\n          console.log(\"Front-end is broken\", error);\n        });\n      }\n\n\n  return (\n      <BrowserRouter>\n      <NavBar\n        caloriesIAte={caloriesIAte} totalCaloriesRemaining={totalCaloriesRemaining}\n        currentUser={currentUser} setCurrentUser={setCurrentUser}>Navbar</NavBar>\n        <Routes>\n        <Route path=\"/\" element = {\n          <WelcomePage/>}\n        />\n        <Route path=\"/food_log\" element={\n                <FoodDashBoardPage \n                setCurrentTdee = {setCurrentTdee}\n                caloriesIAte={caloriesIAte}\n                currentTdee={currentTdee}\n                currentUser={currentUser}\n                setCurrentUser={setCurrentUser}\n                searchedItems={searchedItems}\n                foodItem={foodItem}\n                setSearchedItems={setSearchedItems}\n                setSelectedMeal={setSelectedMeal}\n                />} />\n          <Route path=\"search_food\" element={\n                <SearchResultsPage \n                setCurrentUser={setCurrentUser}\n                setSearchedItems={setSearchedItems} searchedItems={searchedItems} \n                addToFoodList={addToFoodList}\n                />} /> \n          <Route path=\"tdee_calculator\" element={<CreateAccountPage\n                                // create_account_tdee ={createAccountAndTdee}\n                                setCurrentUser={setCurrentUser}\n                                // calculate_tdee={calculate_tdee} \n                                setCurrentTdee={setCurrentTdee}/>}\n                                /> \n          <Route path=\"login\" element={\n            <LoginPage\n            setCurrentTdee={setCurrentTdee}\n            currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n            />} />\n          <Route path=\"*\" element={<Error/>}/>\n        </Routes>\n      </BrowserRouter>\n\n  );\n\n}\n\n\nexport default App;\n\n\n// function addToFoodList (foodToAdd) {   // add the selected food list to its designated area\n//   console.log(\"currentUser\",currentUser.user_id)\n//   fetch('/add_to_food_list', {\n//       method: 'POST',\n//       headers: {\n//           \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//                       \"name\": foodToAdd.name, \n//                       \"description\": foodToAdd.description,\n//                       \"calories\": foodToAdd.calories,\n//                       \"meal_type\": selectedMeal,\n//                       \"user_id\": currentUser.user_id,\n//       })\n//     })\n//       .then(response => response.json())\n//       .then(data => setFoodItem([...foodItem, data]))\n//       .catch(error => {console.log(\"front-end is broken\", error)})  \n//   return foodItem \n// }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}