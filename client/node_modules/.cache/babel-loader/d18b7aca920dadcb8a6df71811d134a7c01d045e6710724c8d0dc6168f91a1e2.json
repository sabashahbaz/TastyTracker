{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/TastyTracker/client/src/Components/ProgressBar.js\";\nimport React, { useState } from 'react';\nimport CSS from \"../CSS/ProgressBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressBar({\n  caloriesIAte,\n  currentTdee\n}) {\n  // Calculate the percentage of caloriesIAte relative to currentTdee\n  const percentage = caloriesIAte / currentTdee * 100;\n\n  // Determine the width and color for the fill portion\n  const fillStyle = {\n    width: `${Math.min(percentage, 100)}%`,\n    // Cap at 100%\n    backgroundColor: caloriesIAte < currentTdee ? '#50C878' : 'transparent' // Green if below currentTdee, else transparent\n  };\n\n  // Determine the color for the portion above currentTdee\n  const aboveTdeeStyle = {\n    backgroundColor: caloriesIAte >= currentTdee ? '#FF0000' : 'transparent' // Red if above or equal to currentTdee, else transparent\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: fillStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar above-tdee\",\n        style: aboveTdeeStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","CSS","jsxDEV","_jsxDEV","ProgressBar","caloriesIAte","currentTdee","percentage","fillStyle","width","Math","min","backgroundColor","aboveTdeeStyle","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/TastyTracker/client/src/Components/ProgressBar.js"],"sourcesContent":["import React, {useState} from 'react'\nimport CSS from \"../CSS/ProgressBar.css\"\n\n\nfunction ProgressBar({ caloriesIAte, currentTdee }) {\n  // Calculate the percentage of caloriesIAte relative to currentTdee\n  const percentage = (caloriesIAte / currentTdee) * 100;\n\n  // Determine the width and color for the fill portion\n  const fillStyle = {\n    width: `${Math.min(percentage, 100)}%`, // Cap at 100%\n    backgroundColor: caloriesIAte < currentTdee ? '#50C878' : 'transparent', // Green if below currentTdee, else transparent\n  };\n\n  // Determine the color for the portion above currentTdee\n  const aboveTdeeStyle = {\n    backgroundColor: caloriesIAte >= currentTdee ? '#FF0000' : 'transparent', // Red if above or equal to currentTdee, else transparent\n  };\n\n  return (\n    <div className=\"progress-container\">\n      <div className=\"progress\">\n        {/* Fill portion */}\n        <div className=\"progress-bar\" style={fillStyle}></div>\n        {/* Portion above currentTdee */}\n        <div className=\"progress-bar above-tdee\" style={aboveTdeeStyle}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressBar;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,GAAG,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,WAAWA,CAAC;EAAEC,YAAY;EAAEC;AAAY,CAAC,EAAE;EAClD;EACA,MAAMC,UAAU,GAAIF,YAAY,GAAGC,WAAW,GAAI,GAAG;;EAErD;EACA,MAAME,SAAS,GAAG;IAChBC,KAAK,EAAG,GAAEC,IAAI,CAACC,GAAG,CAACJ,UAAU,EAAE,GAAG,CAAE,GAAE;IAAE;IACxCK,eAAe,EAAEP,YAAY,GAAGC,WAAW,GAAG,SAAS,GAAG,aAAa,CAAE;EAC3E,CAAC;;EAED;EACA,MAAMO,cAAc,GAAG;IACrBD,eAAe,EAAEP,YAAY,IAAIC,WAAW,GAAG,SAAS,GAAG,aAAa,CAAE;EAC5E,CAAC;;EAED,oBACEH,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCZ,OAAA;MAAKW,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAEvBZ,OAAA;QAAKW,SAAS,EAAC,cAAc;QAACE,KAAK,EAAER;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEtDjB,OAAA;QAAKW,SAAS,EAAC,yBAAyB;QAACE,KAAK,EAAEH;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GAzBQjB,WAAW;AA2BpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}