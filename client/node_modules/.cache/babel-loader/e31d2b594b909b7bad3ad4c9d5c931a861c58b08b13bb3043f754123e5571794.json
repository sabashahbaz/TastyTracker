{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FoodItem({\n  item,\n  addToFoodList,\n  selectedMeal,\n  currentUser,\n  setTotalCaloriesIAte\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [foodItem, setFoodItem] = useState([]);\n  console.log(currentUser);\n  console.log(currentUser.user_id);\n  function postDataAndPatchData() {\n    // const newObj = {\n    //     \"name\": item.name, \n    //     \"description\": item.description,\n    //     \"calories\": item.calories,\n    //     \"meal_type\": selectedMeal,\n    //     \"user_id\": currentUser.user_id,\n    // }\n    // console.log(newObj)\n    fetch('/add_to_food_list', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      },\n      body: JSON.stringify({\n        \"name\": item.name,\n        \"description\": item.description,\n        \"calories\": item.calories,\n        \"meal_type\": selectedMeal,\n        \"user_id\": currentUser.user_id\n      })\n    }).then(response => response.json()).then(data => {\n      setFoodItem([...foodItem, data]);\n    });\n    fetch(`/update_calories_eaten/${currentUser.user_id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"calories\": item.calories\n      })\n    }).then(response => response.json()).then(data => setTotalCaloriesIAte(data));\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-item\",\n    onClick: e => postDataAndPatchData(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calories: \", item.calories, \" calories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(FoodItem, \"3uZSrLJrYfkQnrvQCt+D092IreM=\", false, function () {\n  return [useNavigate];\n});\n_c = FoodItem;\nexport default FoodItem;\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }\n\n// console.log(currentFoodResponse)\n\n// async function handleClick(e) {\n//     await addToFoodList(item)\n//     if (currentFoodResponse) {\n//         navigate('/food_log')\n//         console.log(currentFoodResponse)\n//     }\n//     console.log(\"hey\")\n//     // console.log(currentUser.user_id)\n//     fetch(/update_calories_eaten/, {\n//         method: 'PATCH',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             'Accepts': 'application/json'\n//         },\n//         body: JSON.stringify({\n//             \"calories\": item.calories,\n//         })\n//     })\n//         .then(response => response.json())\n//         .then(data => setTotalCaloriesIAte(data))\n//     postDataAndPatchData(item)\n\n// async function postDataAndPatchData(foodToAdd, caloriesToPatch) {\n//     try {\n//         const postResponse = await fetch('/add_to_food_list', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 \"name\": foodToAdd.name, \n//                 \"description\": foodToAdd.description,\n//                 \"calories\": foodToAdd.calories,\n//                 \"meal_type\": selectedMeal,\n//                 \"user_id\": currentUser.user_id,\n//             }),\n//         });\n\n//         const patchResponse = await fetch(`/update_calories_eaten`, {\n//             method: 'PATCH',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 \"calories\": caloriesToPatch.calories,\n//             }),\n//         });\n\n//         if (postResponse.ok && patchResponse.ok) {\n//             const postData = await postResponse.json();\n//             const patchData = await patchResponse.json();\n\n//             console.log('POST Response:', postData);\n//             console.log('PATCH Response:', patchData);\n//         } else {\n//             console.error(\"Request failed\");\n//         }\n//     } catch (error) {\n//         console.error(\"An error occurred:\", error);\n//     }\n// }\nvar _c;\n$RefreshReg$(_c, \"FoodItem\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","FoodItem","item","addToFoodList","selectedMeal","currentUser","setTotalCaloriesIAte","_s","navigate","foodItem","setFoodItem","console","log","user_id","postDataAndPatchData","fetch","method","headers","body","JSON","stringify","name","description","calories","then","response","json","data","className","onClick","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\n\nfunction FoodItem ({item, addToFoodList, selectedMeal, currentUser, setTotalCaloriesIAte}) {\n    const navigate = useNavigate()\n    const [foodItem, setFoodItem] = useState([])\n\n    console.log(currentUser)\n    \n    console.log(currentUser.user_id)\n    function postDataAndPatchData() {\n        // const newObj = {\n        //     \"name\": item.name, \n        //     \"description\": item.description,\n        //     \"calories\": item.calories,\n        //     \"meal_type\": selectedMeal,\n        //     \"user_id\": currentUser.user_id,\n        // }\n        // console.log(newObj)\n        fetch('/add_to_food_list', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n            },\n            body: JSON.stringify({\n                \"name\": item.name, \n                \"description\": item.description,\n                \"calories\": item.calories,\n                \"meal_type\": selectedMeal,\n                \"user_id\": currentUser.user_id,\n            })\n        })\n            .then(response => response.json())\n            .then(data =>{setFoodItem([...foodItem, data])})\n\n        fetch(`/update_calories_eaten/${currentUser.user_id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"calories\": item.calories,\n            })\n        })\n            .then(response => response.json())\n            .then(data => setTotalCaloriesIAte(data) )\n};\n\n    return (\n        <div className=\"food-item\" onClick={(e) => postDataAndPatchData(e)} >\n        <h1>{item.name}</h1>\n        <p>{item.description}</p>\n        <p>Calories: {item.calories} calories</p>\n        </div> \n    )\n    }\n\nexport default FoodItem;\n\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }\n\n\n\n\n    // console.log(currentFoodResponse)\n\n    // async function handleClick(e) {\n    //     await addToFoodList(item)\n    //     if (currentFoodResponse) {\n    //         navigate('/food_log')\n    //         console.log(currentFoodResponse)\n    //     }\n    //     console.log(\"hey\")\n    //     // console.log(currentUser.user_id)\n    //     fetch(/update_calories_eaten/, {\n    //         method: 'PATCH',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             'Accepts': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             \"calories\": item.calories,\n    //         })\n    //     })\n    //         .then(response => response.json())\n    //         .then(data => setTotalCaloriesIAte(data))\n    //     postDataAndPatchData(item)\n    \n\n    // async function postDataAndPatchData(foodToAdd, caloriesToPatch) {\n    //     try {\n    //         const postResponse = await fetch('/add_to_food_list', {\n    //             method: 'POST',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify({\n    //                 \"name\": foodToAdd.name, \n    //                 \"description\": foodToAdd.description,\n    //                 \"calories\": foodToAdd.calories,\n    //                 \"meal_type\": selectedMeal,\n    //                 \"user_id\": currentUser.user_id,\n    //             }),\n    //         });\n    \n    //         const patchResponse = await fetch(`/update_calories_eaten`, {\n    //             method: 'PATCH',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify({\n    //                 \"calories\": caloriesToPatch.calories,\n    //             }),\n    //         });\n    \n    //         if (postResponse.ok && patchResponse.ok) {\n    //             const postData = await postResponse.json();\n    //             const patchData = await patchResponse.json();\n    \n    //             console.log('POST Response:', postData);\n    //             console.log('PATCH Response:', patchData);\n    //         } else {\n    //             console.error(\"Request failed\");\n    //         }\n    //     } catch (error) {\n    //         console.error(\"An error occurred:\", error);\n    //     }\n    // }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}