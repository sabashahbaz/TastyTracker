{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FoodItem({\n  item,\n  addToFoodList,\n  selectedMeal,\n  currentUser,\n  setTotalCaloriesIAte,\n  currentFoodResponse\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [foodItem, setFoodItem] = useState([]);\n  console.log(currentUser);\n  // console.log(currentFoodResponse)\n\n  // async function handleClick(e) {\n  //     await addToFoodList(item)\n  //     if (currentFoodResponse) {\n  //         navigate('/food_log')\n  //         console.log(currentFoodResponse)\n  //     }\n  //     console.log(\"hey\")\n  //     // console.log(currentUser.user_id)\n  //     fetch(/update_calories_eaten/, {\n  //         method: 'PATCH',\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //             'Accepts': 'application/json'\n  //         },\n  //         body: JSON.stringify({\n  //             \"calories\": item.calories,\n  //         })\n  //     })\n  //         .then(response => response.json())\n  //         .then(data => setTotalCaloriesIAte(data))\n  //     postDataAndPatchData(item)\n\n  // async function postDataAndPatchData(foodToAdd, caloriesToPatch) {\n  //     try {\n  //         const postResponse = await fetch('/add_to_food_list', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify({\n  //                 \"name\": foodToAdd.name, \n  //                 \"description\": foodToAdd.description,\n  //                 \"calories\": foodToAdd.calories,\n  //                 \"meal_type\": selectedMeal,\n  //                 \"user_id\": currentUser.user_id,\n  //             }),\n  //         });\n\n  //         const patchResponse = await fetch(`/update_calories_eaten`, {\n  //             method: 'PATCH',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify({\n  //                 \"calories\": caloriesToPatch.calories,\n  //             }),\n  //         });\n\n  //         if (postResponse.ok && patchResponse.ok) {\n  //             const postData = await postResponse.json();\n  //             const patchData = await patchResponse.json();\n\n  //             console.log('POST Response:', postData);\n  //             console.log('PATCH Response:', patchData);\n  //         } else {\n  //             console.error(\"Request failed\");\n  //         }\n  //     } catch (error) {\n  //         console.error(\"An error occurred:\", error);\n  //     }\n  // }\n\n  console.log(current);\n  function postDataAndPatchData() {\n    const newObj = {\n      \"name\": item.name,\n      \"description\": item.description,\n      \"calories\": item.calories,\n      \"meal_type\": selectedMeal,\n      \"user_id\": currentUser.id\n    };\n    console.log(newObj);\n    fetch('/add_to_food_list', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      },\n      body: JSON.stringify(newObj)\n    }).then(response => response.json()).then(data => setFoodItem([...foodItem, data]));\n\n    // fetch(`/update_calories_eaten`, {\n    //     method: 'PATCH',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify({\n    //         \"calories\": foodToAdd.calories,\n    //     })\n    // })\n    //     .then(response => response.json())\n    //     .then(data => setTotalCaloriesIAte(data) )\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-item\",\n    onClick: e => postDataAndPatchData(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calories: \", item.calories, \" calories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(FoodItem, \"3uZSrLJrYfkQnrvQCt+D092IreM=\", false, function () {\n  return [useNavigate];\n});\n_c = FoodItem;\nexport default FoodItem;\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }\nvar _c;\n$RefreshReg$(_c, \"FoodItem\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","FoodItem","item","addToFoodList","selectedMeal","currentUser","setTotalCaloriesIAte","currentFoodResponse","_s","navigate","foodItem","setFoodItem","console","log","current","postDataAndPatchData","newObj","name","description","calories","id","fetch","method","headers","body","JSON","stringify","then","response","json","data","className","onClick","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/TastyTracker/client/src/Components/FoodItem.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\n\nfunction FoodItem ({item, addToFoodList, selectedMeal, currentUser, setTotalCaloriesIAte, currentFoodResponse}) {\n    const navigate = useNavigate()\n    const [foodItem, setFoodItem] = useState([])\n\n    console.log(currentUser)\n    // console.log(currentFoodResponse)\n\n    // async function handleClick(e) {\n    //     await addToFoodList(item)\n    //     if (currentFoodResponse) {\n    //         navigate('/food_log')\n    //         console.log(currentFoodResponse)\n    //     }\n    //     console.log(\"hey\")\n    //     // console.log(currentUser.user_id)\n    //     fetch(/update_calories_eaten/, {\n    //         method: 'PATCH',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             'Accepts': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             \"calories\": item.calories,\n    //         })\n    //     })\n    //         .then(response => response.json())\n    //         .then(data => setTotalCaloriesIAte(data))\n    //     postDataAndPatchData(item)\n    \n\n    // async function postDataAndPatchData(foodToAdd, caloriesToPatch) {\n    //     try {\n    //         const postResponse = await fetch('/add_to_food_list', {\n    //             method: 'POST',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify({\n    //                 \"name\": foodToAdd.name, \n    //                 \"description\": foodToAdd.description,\n    //                 \"calories\": foodToAdd.calories,\n    //                 \"meal_type\": selectedMeal,\n    //                 \"user_id\": currentUser.user_id,\n    //             }),\n    //         });\n    \n    //         const patchResponse = await fetch(`/update_calories_eaten`, {\n    //             method: 'PATCH',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify({\n    //                 \"calories\": caloriesToPatch.calories,\n    //             }),\n    //         });\n    \n    //         if (postResponse.ok && patchResponse.ok) {\n    //             const postData = await postResponse.json();\n    //             const patchData = await patchResponse.json();\n    \n    //             console.log('POST Response:', postData);\n    //             console.log('PATCH Response:', patchData);\n    //         } else {\n    //             console.error(\"Request failed\");\n    //         }\n    //     } catch (error) {\n    //         console.error(\"An error occurred:\", error);\n    //     }\n    // }\n    \n    console.log(current)\n    function postDataAndPatchData() {\n        const newObj = {\n            \"name\": item.name, \n            \"description\": item.description,\n            \"calories\": item.calories,\n            \"meal_type\": selectedMeal,\n            \"user_id\": currentUser.id,\n        }\n        console.log(newObj)\n        fetch('/add_to_food_list', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n            },\n            body: JSON.stringify(newObj)\n        })\n            .then(response => response.json())\n            .then(data =>setFoodItem([...foodItem, data]))\n\n        // fetch(`/update_calories_eaten`, {\n        //     method: 'PATCH',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //     },\n        //     body: JSON.stringify({\n        //         \"calories\": foodToAdd.calories,\n        //     })\n        // })\n        //     .then(response => response.json())\n        //     .then(data => setTotalCaloriesIAte(data) )\n};\n\n    return (\n        <div className=\"food-item\" onClick={(e) => postDataAndPatchData(e)} >\n        <h1>{item.name}</h1>\n        <p>{item.description}</p>\n        <p>Calories: {item.calories} calories</p>\n        </div> \n    )\n    }\n\nexport default FoodItem;\n\n\n// .then(data => {\n//     fetch(`/update_total_daily_calories_eaten/${currentUser.user_id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\": \"application/JSON\",\n//       },\n//       body: JSON.stringify({\n//         \"total_daily_calories_eaten\": data.calories\n//       })\n//     })\n//     console.log(\"did we pass the patch??\")\n//     .then(response => {\n//       if (response.ok) {\n//         console.log('Calories consumed updated successfully.');\n//       } else {\n//         console.error('Failed to update calories consumed.');\n//       }\n//     })\n//     .catch(error => {\n//       console.error('An error occurred while updating calories consumed:', error);\n//     });\n\n//     // Step 3: Update the state with the new food item\n//     setFoodItem([...foodItem, data]);\n//     console.log(\"did we finish\")\n//   })\n//   .catch(error => {\n//     console.log(\"Front-end is broken\", error);\n//   });\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}